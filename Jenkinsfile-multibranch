pipeline {
agent any

options {
    buildDiscarder(logRotator(numToKeepStr: '20'))
    disableConcurrentBuilds()
    timeout (time: 30, unit: 'MINUTES')
    timestamps()
  }

   
        

    stages {

      stage('setting up ') {
     
            steps {
                sh '''
               sudo rm -rf SESSION-01-DEVELOPMENT || true
               git clone -b $BRANCH_NAME  https://github.com/devopseasylearning/SESSION-01-DEVELOPMENT.git
               cd SESSION-01-DEVELOPMENT
                '''
            }
        }

        
              stage('Build artifact ') {
        
              agent {
                docker {

                  image 'devopseasylearning2021/s1-project02:maven-3.8.4-openjdk-8'
                }
              }
            steps {
                sh '''
                rm -rf webapp/target/webapp.war || true 
                mvn clean
                 mvn validate 
                 mvn compile
                 mvn test 
                 mvn package
                 mvn verify 
                 mvn install

             
rm -rf  check.sh || true 
cat <<EOF > check.sh
#!/bin/bash
cp -r  webapp/target/webapp.war . 
if 
[[ $? -ne  0  ]]
then 
echo "tar file missing"
exit 1
fi
EOF

bash  check.sh
                
                
                '''
            }
        }



  stage('SonarQube analysis') {
            agent {
                docker {

                  image 'sonarsource/sonar-scanner-cli:4.7.0'
                }
               }
               environment {
        CI = 'true'
        scannerHome='/opt/sonar-scanner'
    }
            steps{
                withSonarQubeEnv('Sonar') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }



    

       

      

    }


   post {
 
    unstable {
      slackSend (channel: '#development-alerts', color: 'warning', message: "UNSTABLE:  Branch name  <<${env.BRANCH_NAME}>>  Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
    }

    failure {
      slackSend (channel: '#development-alerts', color: '#FF0000', message: "FAILURE:  Branch name  <<${env.BRANCH_NAME}>> Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
    }
   
    cleanup {
      deleteDir()
    }
}




}



    
 
